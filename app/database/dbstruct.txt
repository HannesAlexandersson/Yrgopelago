Database structure:
type: SQLITE
Tables:
table rooms:
  room_id / room_name / room_price

table features:
  feature_id / feature_name / feature_price

table bookings:
  booking_id / user_id(transfercode) / room_id(foreignKey => rooms(room_id)) / arrival_date / departure_date / total_cost

table booking_features(junktion table)
  booking_id (foreignKey => bookings(booking_id)) / feature_id (foreignKey => features(feature_id))


On successful booking the prepared sqlite statement is used:

```
$query = "INSERT INTO bookings (user_id, room_id, arrival_date, departure_date, total_cost)
              VALUES (:user_id, :room_id, :arrival_date, :departure_date, :total_cost)";

    $statement = $db->prepare($query);
    $statement->bindParam(':user_id', $user_id);
    $statement->bindParam(':room_id', $room_id);
    $statement->bindParam(':arrival_date', $arrival_date);
    $statement->bindParam(':departure_date', $departure_date);
    $statement->bindParam(':total_cost', $total_cost);

    $statement->execute();


    $booking_id = $db->lastInsertId();


    if (!empty($features)) {
        foreach ($features as $feature_id) {
            $query = "INSERT INTO booking_features (booking_id, feature_id) VALUES (:booking_id, :feature_id)";
            $stmt = $db->prepare($query);
            $stmt->bindParam(':booking_id', $booking_id);
            $stmt->bindParam(':feature_id', $feature_id);
            $stmt->execute();
        }
    }

```

The DB provides the Calender with the booked dates for all of the rooms.

statements used for creating the tables:
```
CREATE TABLE rooms (
    room_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL
);

INSERT INTO rooms (room_id, name, price) VALUES (1, 'The Gaze', 5.00);

INSERT INTO rooms (room_id, name, price) VALUES (2, 'The Tranquility', 10.00);

INSERT INTO rooms (room_id, name, price) VALUES (3, 'The Presidential', 25.00);


CREATE TABLE features (
feature_id INTEGER PRIMARY KEY AUTOINCREMENT,
name VARCHAR,
price INT
);

INSERT INTO features (feature_id, name, price) VALUES (1, 'massage therapy', 5);

INSERT INTO features (feature_id, name, price) VALUES (2, 'bedtime storyteller', 5);

INSERT INTO features (feature_id, name, price) VALUES (3, 'underground hotsprings', 5);


CREATE TABLE bookings (
    booking_id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id VARCHAR(36) NOT NULL,
    room_id INT NOT NULL,
    arrival_date DATE NOT NULL,
    departure_date DATE NOT NULL,
    total_cost DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (room_id) REFERENCES rooms(room_id)
);

CREATE TABLE booking_features (
    booking_id INT,
    feature_id INT,
    PRIMARY KEY (booking_id, feature_id),
    FOREIGN KEY (booking_id) REFERENCES bookings(booking_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);



```